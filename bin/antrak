#!/usr/bin/env python3
#
# AnTrak - Activity and location data analysis
#
# Copyright (C) 2014 by Artur Wroblewski <wrobell@pld-linux.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import asyncio
import argparse
import logging

def common_args(parser):
    """
    Add common arguments to a parser of AnTrak commands.
    """
    parser.add_argument(
        '-d', '--device', dest='device', default='default',
        help='location device (i.e. GPS, phone) identifier, default "unknown"'
    )

desc = """\
AnTrak 0.1.0.

Activity and location data analysis.
"""
parser = argparse.ArgumentParser(description=desc)
parser.add_argument(
    '-v', '--verbose', action='store_true', dest='verbose', default=False,
    help='explain what is being done'
)
m_subp = parser.add_subparsers(dest='subcmd')

# command: import
c_subp = m_subp.add_parser('import')
common_args(c_subp)
c_subp.add_argument(
    'files', nargs='+',
    help='Files containing GPS positions (NMEA format)'
)

args = parser.parse_args()

if args.verbose:
    logging.basicConfig(level=logging.DEBUG)
else:
    logging.basicConfig(level=logging.WARN)

if args.subcmd == 'import':
    import itertools
    from antrak.nmea import parse_points
    from antrak.db import save_pos

    flatten = itertools.chain.from_iterable

    data = flatten(parse_points(open(fn)) for fn in args.files)

    loop = asyncio.get_event_loop()
    task = save_pos(args.device, data)
    loop.run_until_complete(task)

# vim: sw=4:et:ai
